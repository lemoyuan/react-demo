{"version":3,"sources":["views/login/index.js","components/crumbs/index.js","components/header/index.js","components/slider/index.jsx","views/pages/home.jsx","views/pages/about.jsx","util/city.js","views/pages/about2.jsx","views/pages/about3.jsx","views/index/index.js","store/reducer.js","store/store.js","App.js","serviceWorker.js","index.js"],"names":["Login","react_default","a","createElement","Component","Crumbs","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","sub","path","console","log","sessionStorage","getItem","onRouterPath","pathSnippets","extraBreadcrumbItems","breadcrumb_default","Item","key","1","2","3","4","5","breadcrumbItems","concat","style","margin","connect","dispatch","type","Header","MyHeader","toggle","logout","className","menu_default","theme","mode","defaultSelectedKeys","lineHeight","onClick","popover_default","placement","content","trigger","userInfo","name","withRouter","Sider","SubMenu","MySlider","setState","index","subs","setItem","_this2","width","background","selectedKeys","openKeys","height","borderRight","title","icon_default","react_router_dom","to","savePath","Home","dataSource","age","address","columns","dataIndex","render","color","table_default","React","CheckboxGroup","checkbox_default","Group","plainOptions","defaultCheckedList","About","handleSearch","value","onSelect","onChange","checkedList","indeterminate","length","checkAll","onCheckAllChange","e","target","checked","nextProps","nextState","auto_complete_default","onSearch","placeholder","borderBottom","options","citys","label","children","Option","AutoCompleteOption","About22","val","handleSubmit","preventDefault","form","validateFieldsAndScroll","err","values","handleConfirmBlur","confirmDirty","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","handleWebsiteChange","autoCompleteResult","map","domain","getFieldDecorator","tailFormItemLayout","wrapperCol","xs","span","offset","sm","prefixSelector","initialValue","select_default","websiteOptions","website","form_default","assign","labelCol","onSubmit","rules","message","required","input_default","validator","onBlur","tooltip_default","whitespace","cascader_default","city","addonBefore","extra","row_default","gutter","col_default","button_default","valuePropName","href","htmlType","About2","create","About3","goLink","history","push","arr","singer","user","refs","inputBtn","focus","self","ref","item","Index","layout_default","components_header","slider","padding","crumbs","react_router","exact","component","routerReducer","action","phone","objectSpread","store","createStore","reducer","App","es","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.19d3abf1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nclass Login extends Component {\n    render() {\n        return (\n            <div>\n                Login\n            </div>\n        )\n    }\n}\nexport default Login;","import React, { Component } from 'react';\nimport { Breadcrumb } from 'antd';\nimport { connect } from \"react-redux\";\nclass Crumbs extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sub: \"sub1\",\n            path: \"1\",\n        };\n    }\n    componentDidMount() {\n        console.log(this.props,\"this.props\")\n        if(sessionStorage.getItem('path')){\n            this.props.onRouterPath(sessionStorage.getItem('path'));\n        }\n    }\n    componentWillReceiveProps(){\n        console.log(\"componentWillReceiveProps\")\n    }\n\n    shouldComponentUpdate () { \n        console.log(\"shouldComponentUpdate\")\n        return true \n    \n    }\n    componentWillUpdate() {\n        console.log(\"componentWillUpdate\")\n     }\n    componentWillUnmount() {\n        console.log(\"componentWillUnmount\")\n    } \n    \n    render() {\n        const breadcrumbNameMap = {\n            '1': 'home',\n            '2': 'about1',\n            '3': 'about2',\n            '4': 'Detail',\n            '5': 'Detail',\n        };\n        const pathSnippets = this.props.path;\n        const extraBreadcrumbItems = \n                <Breadcrumb.Item key={pathSnippets}>\n                    {breadcrumbNameMap[pathSnippets]}\n                </Breadcrumb.Item>\n        ;\n        const breadcrumbItems = [(\n            <Breadcrumb.Item key=\"home\">\n              Home\n            </Breadcrumb.Item>\n          )].concat(extraBreadcrumbItems);\n        return (\n            <div>\n                <Breadcrumb style={{ margin: '16px 0' }}>\n                    {breadcrumbItems}\n                </Breadcrumb>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        path: state.path\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        onRouterPath: path => {\n            dispatch({ type: \"ROUTER_ACTION\", path: path });\n        }\n    };\n};\nCrumbs = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Crumbs);\nexport default Crumbs;","import React, { Component } from 'react';\nimport { Layout, Menu ,Popover, Button} from 'antd';\nimport { connect } from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport \"./header.css\"\nconst { Header } = Layout;\n\nclass MyHeader extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n        };\n    }\n\n    toggle = () => { \n    }\n\n    logout = ()=>{\n        // this.props.histpry.push('/login');\n        console.log(this.props,\"1\");\n\n    }\n\n    render() {\n        return (\n            <div>\n               <Header className=\"header\">\n                    <div className=\"logo\" >logo</div>\n                    \n                    <Menu\n                        theme=\"dark\"\n                        mode=\"horizontal\"\n                        defaultSelectedKeys={['1']}\n                        style={{ lineHeight: '64px' }}\n                    >\n                        <Menu.Item key=\"1\" onClick={this.toggle}>nav 1</Menu.Item>\n                        <Menu.Item key=\"2\">nav 2</Menu.Item>\n                        <Menu.Item key=\"3\">nav 3</Menu.Item>\n                    </Menu>\n                    <div className=\"user\">\n                        <Popover  placement=\"bottomRight\"  content={(\n                                <div onClick={this.logout}>\n                                    退出\n                                </div>\n                            )}  trigger=\"click\">\n                            <span >{this.props.userInfo.name}</span>\n                            \n                        </Popover>\n                    </div>\n                    \n                    \n                </Header>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        userInfo: state.userInfo\n    };\n};\n\nMyHeader = connect(\n    mapStateToProps,\n)(MyHeader);\nexport default withRouter(MyHeader);","import React, { Component } from 'react';\nimport { Menu, Icon, Layout } from 'antd'; // +\nimport { BrowserRouter as Router,Link,Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nconst { Sider } = Layout; // +\nconst SubMenu = Menu.SubMenu;\nclass MySlider extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            path: \"1\"\n        };\n    }\n    componentDidMount() {\n        if(sessionStorage.getItem('path')){\n            this.setState({path: sessionStorage.getItem('path')}, function(){\n            })\n        }\n        console.log(this.props.path,this.state.path)\n\n    }\n    savePath(index,subs){\n        sessionStorage.setItem('path',index);\n        sessionStorage.setItem('sub',subs);\n    }\n    render() {\n        return (\n            <div>\n                <Sider width={200} style={{ background: '#fff' }}>\n                    <Menu\n                        mode=\"inline\"\n                        selectedKeys={[this.props.path]}\n                        openKeys={['sub1']}\n                        style={{ height: '100%', borderRight: 0 }}\n                    >\n                        <SubMenu key=\"sub1\" title={<span><Icon type=\"user\" />subnav 1</span>}>\n                            <Menu.Item key=\"1\" ><Link to=\"/\" onClick={() => {\n                                this.savePath('1','sub1')\n                                this.props.onRouterPath('1');\n                            }}>首页</Link></Menu.Item>\n                            <Menu.Item key=\"2\"><Link to=\"/about\" onClick={() => {\n                                this.savePath('2','sub1')\n                                this.props.onRouterPath('2');\n                            }}>关于</Link></Menu.Item>\n                            <Menu.Item key=\"3\" ><Link to=\"/about2\" onClick={() => {\n                                this.savePath('3','sub1')\n                                this.props.onRouterPath('3');\n                            }}>表单提交</Link></Menu.Item>\n                            <Menu.Item key=\"4\" ><Link to=\"/about3\" onClick={() => {\n                                this.savePath('4','sub1')\n                                this.props.onRouterPath('4');\n                            }}>基本操作</Link></Menu.Item>\n                        </SubMenu>\n                        <SubMenu key=\"sub2\" title={<span><Icon type=\"laptop\" />subnav 2</span>}>\n                            <Menu.Item key=\"5\">option5</Menu.Item>\n                            <Menu.Item key=\"6\">option6</Menu.Item>\n                            <Menu.Item key=\"7\">option7</Menu.Item>\n                            <Menu.Item key=\"8\">option8</Menu.Item>\n                        </SubMenu>\n                        <SubMenu key=\"sub3\" title={<span><Icon type=\"notification\" />subnav 3</span>}>\n                            <Menu.Item key=\"9\">option9</Menu.Item>\n                            <Menu.Item key=\"10\">option10</Menu.Item>\n                            <Menu.Item key=\"11\">option11</Menu.Item>\n                            <Menu.Item key=\"12\">option12</Menu.Item>\n                        </SubMenu>\n                    </Menu>\n                </Sider>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        path: state.path\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onRouterPath: path => {\n            dispatch({ type: \"ROUTER_ACTION\", path: path });\n        }\n    };\n};\n\nMySlider = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MySlider);\n\nexport default MySlider;","import React from 'react';\nimport { Table } from 'antd';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            dataSource: [ {\n                key: '1',\n                name: '胡彦祖',\n                age: 42,\n                address: '西湖区湖底公园1号'\n            },{\n                key: '2',\n                name: '胡彦斌',\n                age: 32,\n                address: '西湖区湖底公园1号'\n            }, {\n                key: '3',\n                name: '胡彦祖',\n                age: 42,\n                address: '西湖区湖底公园1号'\n            },{\n                key: '4',\n                name: '胡彦斌',\n                age: 32,\n                address: '西湖区湖底公园1号'\n            }, {\n                key: '5',\n                name: '胡彦祖',\n                age: 42,\n                address: '西湖区湖底公园1号'\n            },{\n                key: '6',\n                name: '胡彦斌',\n                age: 32,\n                address: '西湖区湖底公园1号'\n            }, {\n                key: '7',\n                name: '胡彦祖',\n                age: 42,\n                address: '西湖区湖底公园1号'\n            }],\n            columns: [{\n                title: '姓名',\n                dataIndex: 'name',\n                key: 'name',\n                render: name => <b style={{color:'red'}}>{name}</b>\n            }, {\n                title: '年龄',\n                dataIndex: 'age',\n                key: 'age',\n            }, {\n                title: '住址',\n                dataIndex: 'address',\n                key: 'address',\n            }],\n\n        }\n    }\n\n    // class创建的组件中 必须有rander方法 且显示return一个react对象或者null\n    render() {\n        return (\n            <div className=\"shopping-list\">\n                <h1>home</h1>\n                <Table dataSource={this.state.dataSource} columns={this.state.columns} />\n            </div>\n        )\n    }\n}\nexport default Home","import React from 'react';\nimport { AutoComplete } from 'antd';\n\nimport { Checkbox } from 'antd';\n\nconst CheckboxGroup = Checkbox.Group;\n\nconst plainOptions = ['Apple', 'Pear', 'Orange'];\nconst defaultCheckedList = ['Apple', 'Orange'];\n\nclass About extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataSource: [],\n\n            checkedList: defaultCheckedList,\n            indeterminate: true,\n            checkAll: false,\n        }\n    }\n    shouldComponentUpdate (nextProps, nextState) { \n        console.log(nextProps, nextState,\"shouldComponentUpdate\")\n        return true \n    \n    }\n    handleSearch = (value) => {\n        this.setState({\n            dataSource: !value ? [] : [\n                value,\n                value + value,\n                value + value + value,\n            ],\n        });\n    }\n\n    onSelect = (value) => {\n        console.log('onSelect', value);\n    }\n\n\n    onChange = (checkedList) => {\n        this.setState({\n            checkedList,\n            indeterminate: !!checkedList.length && (checkedList.length < plainOptions.length),\n            checkAll: checkedList.length === plainOptions.length,\n        });\n    }\n\n    onCheckAllChange = (e) => {\n        this.setState({\n            checkedList: e.target.checked ? plainOptions : [],\n            indeterminate: false,\n            checkAll: e.target.checked,\n        });\n    }\n    // class创建的组件中 必须有rander方法 且显示return一个react对象或者null\n    render() {\n        const { dataSource } = this.state;\n        return (\n            <div className=\"shopping-list\">\n                <AutoComplete\n                    dataSource={dataSource}\n                    style={{ width: 200 }}\n                    onSelect={this.onSelect}\n                    onSearch={this.handleSearch}\n                    placeholder=\"input here\"\n                />\n                <div style={{height:'40px'}} ></div>\n                <div>\n                    <div style={{ borderBottom: '1px solid #E9E9E9' }}>\n                        <Checkbox\n                            indeterminate={this.state.indeterminate}\n                            onChange={this.onCheckAllChange}\n                            checked={this.state.checkAll}\n                        >\n                            Check all\n                        </Checkbox>\n                    </div>\n                    <br />\n                    <CheckboxGroup options={plainOptions} value={this.state.checkedList} onChange={this.onChange} />\n                </div>\n\n            </div>\n        )\n    }\n}\nexport default About","const citys = [{\n    value: 'zhejiang',\n    label: 'Zhejiang',\n    children: [{\n      value: 'hangzhou',\n      label: 'Hangzhou',\n      children: [{\n        value: 'xihu',\n        label: 'West Lake',\n      }],\n    }],\n  }, {\n    value: 'jiangsu',\n    label: 'Jiangsu',\n    children: [{\n      value: 'nanjing',\n      label: 'Nanjing',\n      children: [{\n        value: 'zhonghuamen',\n        label: 'Zhong Hua Men',\n      }],\n    }],\n  }];\n\n  export default citys;","import React from 'react';\nimport city from '../../util/city';\nimport { Form, Input, Tooltip, Icon, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\n\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\n\nclass About22 extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            confirmDirty: false,\n            autoCompleteResult: [],\n        }\n    }\n    onChange = (val) => {\n        console.log(val)\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            console.log( values);\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    }\n\n    handleConfirmBlur = (e) => {\n        const value = e.target.value;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    }\n\n    compareToFirstPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && value !== form.getFieldValue('password')) {\n            callback('Two passwords that you enter is inconsistent!');\n        } else {\n            callback();\n        }\n    }\n\n    validateToNextPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && this.state.confirmDirty) {\n            form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n    }\n\n    handleWebsiteChange = (value) => {\n        let autoCompleteResult;\n        if (!value) {\n            autoCompleteResult = [];\n        } else {\n            autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n        }\n        this.setState({ autoCompleteResult });\n    }\n\n\n    // class创建的组件中 必须有rander方法 且显示return一个react对象或者null\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const { autoCompleteResult } = this.state;\n\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 8 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 16 },\n            },\n        };\n        const tailFormItemLayout = {\n            wrapperCol: {\n                xs: {\n                    span: 24,\n                    offset: 0,\n                },\n                sm: {\n                    span: 16,\n                    offset: 8,\n                },\n            },\n        };\n        const prefixSelector = getFieldDecorator('prefix', {\n            initialValue: '86',\n        })(\n            <Select style={{ width: 70 }}>\n                <Option value=\"86\">+86</Option>\n                <Option value=\"87\">+87</Option>\n            </Select>\n        );\n\n        const websiteOptions = autoCompleteResult.map(website => (\n            <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n        ));\n        return (\n            <div className=\"shopping-list\">\n                <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n                    <Form.Item\n                        label=\"E-mail\"\n                    >\n                        {getFieldDecorator('email', {\n                            rules: [{\n                                type: 'email', message: 'The input is not valid E-mail!',\n                            }, {\n                                required: true, message: 'Please input your E-mail!',\n                            }],\n                        })(\n                            <Input />\n                        )}\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Password\"\n                    >\n                        {getFieldDecorator('password', {\n                            rules: [{\n                                required: true, message: 'Please input your password!',\n                            }, {\n                                validator: this.validateToNextPassword,\n                            }],\n                        })(\n                            <Input type=\"password\" />\n                        )}\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Confirm Password\"\n                    >\n                        {getFieldDecorator('confirm', {\n                            rules: [{\n                                required: true, message: 'Please confirm your password!',\n                            }, {\n                                validator: this.compareToFirstPassword,\n                            }],\n                        })(\n                            <Input type=\"password\" onBlur={this.handleConfirmBlur} />\n                        )}\n                    </Form.Item>\n                    <Form.Item\n                        label={(\n                            <span>\n                                Nickname&nbsp;\n              <Tooltip title=\"What do you want others to call you?\">\n                                    <Icon type=\"question-circle-o\" />\n                                </Tooltip>\n                            </span>\n                        )}\n                    >\n                        {getFieldDecorator('nickname', {\n                            rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\n                        })(\n                            <Input />\n                        )}\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Habitual Residence\"\n                    >\n                        {getFieldDecorator('residence', {\n                            initialValue: ['zhejiang', 'hangzhou', 'xihu'],\n                            rules: [{ type: 'array', required: true, message: 'Please select your habitual residence!' }],\n                        })(\n                            <Cascader options={city} />\n                        )}\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Phone Number\"\n                    >\n                        {getFieldDecorator('phone', {\n                            rules: [{ required: true, message: 'Please input your phone number!' }],\n                        })(\n                            <Input addonBefore={prefixSelector} style={{ width: '100%' }} />\n                        )}\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Website\"\n                    >\n                        {getFieldDecorator('website', {\n                            rules: [{ required: true, message: 'Please input website!' }],\n                        })(\n                            <AutoComplete\n                                dataSource={websiteOptions}\n                                onChange={this.handleWebsiteChange}\n                                placeholder=\"website\"\n                            >\n                                <Input />\n                            </AutoComplete>\n                        )}\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Captcha\"\n                        extra=\"We must make sure that your are a human.\"\n                    >\n                        <Row gutter={8}>\n                            <Col span={12}>\n                                {getFieldDecorator('captcha', {\n                                    rules: [{ required: true, message: 'Please input the captcha you got!' }],\n                                })(\n                                    <Input />\n                                )}\n                            </Col>\n                            <Col span={12}>\n                                <Button>Get captcha</Button>\n                            </Col>\n                        </Row>\n                    </Form.Item>\n                    <Form.Item {...tailFormItemLayout}>\n                        {getFieldDecorator('agreement', {\n                            valuePropName: 'checked',\n                        })(\n                            <Checkbox>I have read the <a href=\"\">agreement</a></Checkbox>\n                        )}\n                    </Form.Item>\n                    <Form.Item {...tailFormItemLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">Register</Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        )\n    }\n}\nconst About2 = Form.create({ name: 'register' })(About22);\nexport default About2","import React from 'react';\nimport { Icon } from 'antd';\nimport { connect } from \"react-redux\";\nimport './about3.less'\nclass About3 extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            arr:[\n                {name:\"稻香\",singer:\"周杰伦\"},\n                {name:\"晴天\",singer:\"周杰伦\"},\n                {name:\"稻香\",singer:\"周杰伦\"},\n                {name:\"晴天\",singer:\"周杰伦\"},\n                {name:\"稻香\",singer:\"周杰伦\"},\n                {name:\"晴天\",singer:\"周杰伦\"},\n                {name:\"稻香\",singer:\"周杰伦\"},\n                {name:\"晴天\",singer:\"周杰伦\"},\n            ]\n        }\n    }\n    goLink = () => {\n        this.props.onRouterPath('3');\n        this.props.history.push('/about2');\n    }\n    componentDidMount(){\n        console.log(this.props.user,this.props);\n        this.refs.inputBtn.focus();\n    }\n    render() {\n        let self = this;\n        return(\n            <div>\n                <input ref=\"inputBtn\" type=\"text\"/>搜索\n                {this.state.arr.map(function(item,index){ \n                    return(\n                        <p className=\"mu-item\" key={index} onClick={self.goLink}>\n                            <span>{index+1}</span>\n                            <span>{item.name}</span>  \n                            <span><Icon type=\"right-circle\" /><Icon type=\"plus\" /><Icon type=\"folder-add\" /></span> \n                        </p>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        path: state.path,\n        user:!!state.userInfo,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onRouterPath: path => {\n            dispatch({ type: \"ROUTER_ACTION\", path: path });\n        }\n    };\n};\n\nAbout3 = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(About3);\n\nexport default About3","\nimport React, { Component } from 'react';\nimport {    Layout, Menu} from 'antd';\nimport './index.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport {withRouter} from \"react-router-dom\";\nimport Crumbs  from '@/components/crumbs' \nimport MyHeader  from '@/components/header' \nimport MySlider  from '@/components/slider' \n\nimport Home  from '@/views/pages/home.jsx' \nimport About  from '@/views/pages/about.jsx' \nimport About2  from '@/views/pages/about2.jsx' \nimport About3  from '@/views/pages/about3.jsx' \n\n\nclass Index extends Component {\n\n    render() {\n        return (\n            <Layout>\n                <MyHeader></MyHeader>\n                <Layout style={{ height:'calc(100% - 65px)'}}>\n                    <MySlider></MySlider>\n                    <Layout style={{ padding: '0 24px 24px' }}>\n                        <Crumbs></Crumbs>\n                        \n                            <div>\n                                <Route exact path=\"/\"  component = { Home } />\n                                <Route path=\"/about\"  component={ About } />\n                                <Route path=\"/about2\"  component={ About2 } />\n                                <Route path=\"/about3\"  component={ About3 } />\n                            </div>\n                        \n                    </Layout>\n                </Layout>\n            </Layout>\n            \n        )\n    }\n}\nexport default withRouter(Index);","const routerReducer = (state, action) => {\n    if (!state) return {\n        path: '1',\n        userInfo:{\n            name:\"admin\",\n            phone:\"17858805259\",\n        }\n    }\n    switch (action.type) {\n        case 'ROUTER_ACTION':\n            return Object.assign({},state, {path: action.path})\n        case 'USER_ACTION':\n            console.log(action)\n            return { ...state, userInfo: action.userInfo }\n        default:\n            return state\n    }\n}\n\nexport default routerReducer","import { createStore } from 'redux'\n\nimport reducer from './reducer'\n\nconst initState = {\n    path: '1',\n    userInfo:{\n        name:\"admin\",\n        phone:\"17858805259\",\n    }\n}\n\nconst store = createStore(reducer, initState)\n\nexport default store","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\n\nimport Login from '@/views/login/index'\nimport Index from '@/views/index/index'\n\nimport { Provider } from 'react-redux'\nimport store from './store/store'\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>  \n        <Router>\n          <div className=\"App\">\n            <Route  path=\"/login\" component={Login}/>\n            <Route  path=\"/\" component={Index}/>\n          </div>\n        </Router>\n      </Provider> \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}